<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Hayley Anderson</title>
 <link href="http://blog.hayleyanderson.us/atom.xml" rel="self"/>
 <link href="http://blog.hayleyanderson.us/"/>
 <updated>2015-06-16T19:49:17-04:00</updated>
 <id>http://blog.hayleyanderson.us/</id>
 <author>
   <name>Hayley Anderson</name>
   <email>hayleyanderson@zoho.com</email>
 </author>

 
 <entry>
   <title>Using (and Testing) Rack::Attack to Improve the Security of Your Rails App</title>
   <link href="http://blog.hayleyanderson.us/2015/06/05/using-and-testing-rack-attack-to-improve-the-security-of-your-rails-app/"/>
   <updated>2015-06-05T00:00:00-04:00</updated>
   <id>http://blog.hayleyanderson.us/2015/06/05/using-and-testing-rack-attack-to-improve-the-security-of-your-rails-app</id>
   <content type="html">&lt;p&gt;Rack::Attack is a rack middleware intended to protect Rails
applications through customized throttling and blocking. I started using it
after attending a talk from the person who created it, and I thought it was
a brilliant option for developers who want to increase the security of their
applications with minimal effort.&lt;/p&gt;

&lt;p&gt;You can prevent attempts at blunt-forcing passwords by throttling requests with
the email or username being attacked, or thwart troublesome scrapers or other
offenders by throttling requests from IP addresses making large volumes of requests.
Rack::Attack makes protecting your applications easy but still provides quite a
bit of freedom to choose what to throttle, block, whitelist, or blacklist.&lt;/p&gt;

&lt;h3&gt;Using Rack::Attack&lt;/h3&gt;

&lt;p&gt;Setting up Rack::Attack is relatively easy and well explained in the
&lt;a href=&quot;https://github.com/kickstarter/rack-attack&quot;&gt;documentation&lt;/a&gt;, but I&amp;#39;ll include
the entire setup process here. First, of course, add &lt;code&gt;gem &amp;quot;rack-attack&amp;quot;&lt;/code&gt;.
Next, set up production caching. Add the gem(s) you&amp;#39;d like to use
and configure in &lt;code&gt;config/environments/production.rb&lt;/code&gt;. I&amp;#39;m using &amp;quot;memcachier&amp;quot;
and &amp;quot;dalli&amp;quot;. If you&amp;#39;re using Heroku, which I am, you&amp;#39;ll
also need to add the
&lt;a href=&quot;https://devcenter.heroku.com/articles/memcachier&quot;&gt;MemCachier add-on&lt;/a&gt;, which
will provide your environmental variables.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cache_store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:dalli_store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;MEMCACHIER_SERVERS&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;ss&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;MEMCACHIER_USERNAME&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                        &lt;span class=&quot;ss&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;MEMCACHIER_PASSWORD&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                        &lt;span class=&quot;ss&quot;&gt;failover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                        &lt;span class=&quot;ss&quot;&gt;socket_timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                        &lt;span class=&quot;ss&quot;&gt;socket_failure_delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
                      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now that caching is set up, you need to set up Rack::Attack itself. First, add
&lt;code&gt;config.middleware.use Rack::Attack&lt;/code&gt; to &lt;code&gt;config/application.rb&lt;/code&gt;. Then create the
file &lt;code&gt;rack-attack.rb&lt;/code&gt; under &lt;code&gt;config/initializers&lt;/code&gt;. This is where you can
customize your use of Rack::Attack. Here&amp;#39;s my configuration, based on the
&lt;a href=&quot;https://github.com/kickstarter/rack-attack/wiki/Example-Configuration&quot;&gt;example&lt;/a&gt;
from the Rack::Attack documentation.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Rack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Attack&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Throttle high volumes of requests by IP address&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;throttle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;req/ip&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;period&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;starts_with?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/assets&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Throttle login attempts by IP address&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;throttle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;logins/ip&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;period&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/admins/sign_in&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post?&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/users/sign_in&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post?&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Throttle login attempts by email address&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;throttle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;logins/email&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;period&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/admins/sign_in&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post?&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;presence&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/users/sign_in&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post?&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;presence&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;My version is different from the configuration mainly because I ran into a lot
of problems when I tried to test it. First, I discovered that using longer time
periods like 300 requests per 5 minutes is not feasible for testing. Second,
I&amp;#39;d assumed that for multiple login pages, it would simply work to make separate
throttle blocks. Testing said otherwise, which does make sense, and thus the
elsif statements. Finally, I discovered while clicking around locally that
assets do, in fact, need to be excluded, if just to avoid headaches while in
development.&lt;/p&gt;

&lt;h3&gt;Testing Rack::Attack&lt;/h3&gt;

&lt;p&gt;So, testing this is pretty important, but how do you test it? Thanks to
&lt;a href=&quot;http://www.mavengineering.com/blog/2014/06/20/how-to-test-rack-attack-with-rspec/&quot;&gt;this post&lt;/a&gt;,
I was able to figure out how this is possible. First and most importantly,
you need to add the &lt;a href=&quot;https://github.com/brynary/rack-test&quot;&gt;Rack::Test gem&lt;/a&gt;:
&lt;code&gt;gem &amp;#39;rack-test&amp;#39;, require: &amp;#39;rack/test&amp;#39;&lt;/code&gt;.
Then, I placed my tests in &lt;code&gt;spec/config/initializers/rack-attack_spec.rb&lt;/code&gt;.
However you want to test, the setup for Rack::Test should be the same (though
changed accordingly if you&amp;#39;re not using RSpec):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rails_helper&amp;#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Attack&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Methods&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;app&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;application&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Your tests&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When it comes to the actual tests, you have to be careful with email addresses
and IP address to keep the tests from interfering with each other, either by
causing other tests with the same credentials to fail or by causing other tests
to falsely pass by throttling by IP address instead of by email or vice versa.
So - warning, large block of code ahead! - these are the tests I wrote:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;throttle excessive requests by IP address&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;number of requests is lower than the limit&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;does not change the request status&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;REMOTE_ADDR&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.2.3.4&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;429&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;number of requests is higher than the limit&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;changes the request status to 429&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;REMOTE_ADDR&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.2.3.5&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;429&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;throttle excessive POST requests to admin sign in by IP address&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;number of requests is lower than the limit&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;does not change the request status&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/admins/sign_in&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;example1&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@gmail.com&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;REMOTE_ADDR&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.2.3.6&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;429&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;number of admin requests is higher than the limit&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;changes the request status to 429&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/admins/sign_in&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;example2&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@gmail.com&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;REMOTE_ADDR&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.2.3.8&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;429&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;throttle excessive POST requests to user sign in by IP address&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;number of requests is lower than the limit&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;does not change the request status&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/users/sign_in&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;example3&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@gmail.com&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;REMOTE_ADDR&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.2.3.7&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;429&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;number of user requests is higher than the limit&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;changes the request status to 429&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/users/sign_in&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;example4&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@gmail.com&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;REMOTE_ADDR&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.2.3.9&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;429&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;throttle excessive POST requests to admin sign in by email address&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;number of requests is lower than the limit&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;does not change the request status&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/admins/sign_in&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;example5@gmail.com&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;REMOTE_ADDR&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.2.4.9&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;429&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;number of requests is higher than the limit&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;changes the request status to 429&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/admins/sign_in&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;example6@gmail.com&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;REMOTE_ADDR&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.2.5.9&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;429&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;throttle excessive POST requests to user sign in by email address&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;number of requests is lower than the limit&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;does not change the request status&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/users/sign_in&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;example7@gmail.com&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;REMOTE_ADDR&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.2.6.9&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;429&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;number of requests is higher than the limit&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;changes the request status to 429&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/users/sign_in&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;example8@gmail.com&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;REMOTE_ADDR&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.2.7.9&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;429&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It was pretty exciting when all these tests passed, and now anyone trying to
brute-force my application or cause other problems is going to face a bit more
of a challenge. So, if you&amp;#39;re interested in having a little more security for
your Rails applications, I encourage you to definitely check out Rack::Attack,
and to also try testing it using Rack::Test!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Even More Beginner (And Intermediate) Coding Resources</title>
   <link href="http://blog.hayleyanderson.us/2015/05/28/even-more-beginner-and-intermediate-coding-resources/"/>
   <updated>2015-05-28T00:00:00-04:00</updated>
   <id>http://blog.hayleyanderson.us/2015/05/28/even-more-beginner-and-intermediate-coding-resources</id>
   <content type="html">&lt;p&gt;I decided to make a follow-up to my
&lt;a href=&quot;/2015/05/09/teaching-yourself-how-to-code-a-bunch-of-beginner-coding-resources&quot;&gt;previous post&lt;/a&gt;
on coding resources because I had a bunch of other resources I wanted to share,
especially some that are beyond the beginner level.&lt;/p&gt;

&lt;h3&gt;Technology&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://learnpythonthehardway.org/book/index.html&quot;&gt;Learn Python the Hard Way&lt;/a&gt; -
I just skipped through this book to learn Python syntax, and it looked like it
did a really good job of explaining the basics and covering a lot of material.
There are also other technologies covered in this family of books.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://rubymonk.com&quot;&gt;Ruby Monk&lt;/a&gt; - I never got a chance to try this out
because I started at Metis before I had the time, but I&amp;#39;ve heard it recommended
before and my friend &lt;a href=&quot;https://twitter.com/monkeypatchr&quot;&gt;Eli&lt;/a&gt; suggested I add this
as a resource for learning Ruby.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hyperpolyglot.org&quot;&gt;Hyperpolyglot&lt;/a&gt; - This awesome site shows
primary differences between programming languages, which could be very helpful
for comparison or reference.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://overthewire.org/wargames/&quot;&gt;OverTheWire&lt;/a&gt; - OverTheWire has a series of
games that teach web and systems security. It&amp;#39;s not just useful for learning
about security though - I&amp;#39;ve found it very helpful in gaining a deeper
understanding of how web sites and systems work.&lt;/p&gt;

&lt;h3&gt;Life as a Developer&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.vikingcodeschool.com/posts/why-learning-to-code-is-so-damn-hard&quot;&gt;Why Learning to Code is So Damn Hard&lt;/a&gt; -
If you&amp;#39;ve finished the tutorials from my earlier post or are at a comparable
level, you&amp;#39;re probably about at the point where coding starts to really suck.
This blog post explains how this is actually normal, and it gets better.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.codenewbie.org/podcast&quot;&gt;CodeNewbie Podcast&lt;/a&gt; - CodeNewbie offers all
kinds of great resources, but I especially love the podcasts, which are
accessible, educational, and fun to listen to at any level.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://modelviewculture.com/issues/programming&quot;&gt;Model View Culture: Programming&lt;/a&gt; -
Model View Culture is a magazine that offers various thought-provoking social
and political perspectives on the field of tech. I think that the programming
issue in particular is a must-read for anyone entering or in tech.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/v0TFmdO4ZP0&quot;&gt;Intermediate Developers by Angelina Fabbro&lt;/a&gt; -
It doesn&amp;#39;t get perfect after you get past the hardest stretches mentioned in
&amp;#39;Why Learning to Code is So Damn Hard&amp;#39;, and that&amp;#39;s when Angelina Fabbro&amp;#39;s talk
on being an intermediate developer is important to hear.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve found all these resources to be incredibly helpful, especially later in my
coding journey, so I hope that others will find them useful as well!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Teaching Yourself How to Code - A Bunch of Beginner Coding Resources</title>
   <link href="http://blog.hayleyanderson.us/2015/05/09/teaching-yourself-how-to-code-a-bunch-of-beginner-coding-resources/"/>
   <updated>2015-05-09T00:00:00-04:00</updated>
   <id>http://blog.hayleyanderson.us/2015/05/09/teaching-yourself-how-to-code-a-bunch-of-beginner-coding-resources</id>
   <content type="html">&lt;p&gt;I love giving people resources for learning how to code, so I thought I should
probably just make a blog post about it. I was especially inspired by &lt;a href=&quot;http://nerdneha.tumblr.com/post/115890208985/teaching-myself-to-code&quot;&gt;Neha&amp;#39;s
talk&lt;/a&gt;
on teaching yourself how to code. Her talk was 1000% accurate, but I used and
recommend totally different resources. These are just some of the resources I
used, but they&amp;#39;re the ones I see as impacting my coding journey the most.&lt;/p&gt;

&lt;h3&gt;Front End&lt;/h3&gt;

&lt;p&gt;Front end and back end are totally different, and you really don&amp;#39;t need to know
both - most people do one or the other - but if you&amp;#39;re just getting started and
don&amp;#39;t know what&amp;#39;s what, learning HTML and CSS is a great way to dive in and see
what coding is all about.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dash.generalassemb.ly&quot;&gt;General Assembly Dash&lt;/a&gt; - In my opinion, the one
and only beginner HTML/CSS tutorial. It will handhold you through just starting
to code but also gives enough freedom to let you learn instead of just parroting
back code. It also helps you see the bigger picture of how code can be used in
the real world.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://hackdesign.org&quot;&gt;Hack Design&lt;/a&gt; - For when you&amp;#39;ve made a couple really
ugly things in Dash and don&amp;#39;t know where to go from here. Hack Design provides
context, history, and design basics that everyone should be aware of.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://learn.shayhowe.com/html-css/&quot;&gt;Learn to Code HTML &amp;amp; CSS&lt;/a&gt; - Dash teaches
you how to get started with code, but it doesn&amp;#39;t necessarily teach good code or
complex code. Learn to Code HTML &amp;amp; CSS teaches you how to code properly and how
to expand beyond the basics.&lt;/p&gt;

&lt;h3&gt;Back End&lt;/h3&gt;

&lt;p&gt;I think that Ruby and Python are by far the best beginner coding languages. I&amp;#39;d
suggest only starting with JavaScript if you know that you want to do front end
and only front end, or with something else if you have an in-person class in
that language available to you. I also think that back end is much harder
to learn on your own than front end - which is not to say that front end is
easy to do, just easier to get started with.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://tryruby.org&quot;&gt;Try Ruby&lt;/a&gt; - Start learning programming in the
browser, in a totally adorable way.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pine.fm/LearnToProgram/&quot;&gt;Learn to Program&lt;/a&gt; - This is a great book for
teaching the basics of Ruby, and programming in general. But it&amp;#39;s important that
you actually do the exercises, no matter how annoying.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://interactivepython.org/runestone/static/pythonds/index.html&quot;&gt;Problem Solving with Algorithms and Data Structures&lt;/a&gt; -
Employers are obsessed with algorithms and data structures, so
best learn some basics. This book uses Python, but Python is quite accessible
coming from Ruby. This website also has other books involving Python, Java, and
general computer science, if you&amp;#39;d rather go in one of those directions.&lt;/p&gt;

&lt;h3&gt;Version Control&lt;/h3&gt;

&lt;p&gt;Once you&amp;#39;ve been coding for a while, version control fades into the background,
but when you&amp;#39;re first starting, it&amp;#39;s one of the more surprising and intimidating
things you have to learn. Version control means more than just git (which is
part of why some tutorials are so confusing - they&amp;#39;re meant for people
transitioning to git from other types of version control), but these days git is
the thing to know. And you&amp;#39;re probably going to need to know how to use it in
order to get your work online.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/2014/10/03/github-and-the-magical-black-hole-of-version-control&quot;&gt;Github and the Magical Black Hole of Version Control&lt;/a&gt; -
This is a blog post that I wrote a long time ago because I don&amp;#39;t think the
beginner git resources sufficiently explain what git is and why you&amp;#39;re using the
commands they say to use.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://try.github.io&quot;&gt;Try Git&lt;/a&gt; - This is a cute tutorial that teaches you the
basic commands you need to know to use git.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.atlassian.com/git/tutorials/&quot;&gt;Atlassian Tutorials&lt;/a&gt; - Once you have
some understanding of git, Atlassian&amp;#39;s tutorials are great for explaining the
variety of commands in more detail.&lt;/p&gt;

&lt;h3&gt;Going Live&lt;/h3&gt;

&lt;p&gt;So you&amp;#39;ve made a thing, but nobody really tells you how to actually put it
online. It&amp;#39;s pretty important, since that&amp;#39;s sort of the point. Sometimes it&amp;#39;s
the hardest part, but it&amp;#39;s a lot easier if you&amp;#39;ve done your studying on git first.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.jonhmchan.com/blog/2014/4/28/finally-a-guide-to-hosting-your-website&quot;&gt;Finally, a Guide to Hosting Your Website&lt;/a&gt; -
The title pretty much says it all, and the post itself says the rest. I didn&amp;#39;t
know git when I tried to follow this tutorial, and it was pretty painful, but
I&amp;#39;m glad I did it because the learning value was huge.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://devcenter.heroku.com/start&quot;&gt;Getting Started on Heroku&lt;/a&gt; - If you made an
application with a back end instead of just a static front end site, congrats,
and Heroku is the place to start if you want to get your application online.&lt;/p&gt;

&lt;h3&gt;Culture&lt;/h3&gt;

&lt;p&gt;What is everyone in tech always talking about anyway? Being able to understand
the culture and follow along with conversations is incredibly important and will
make it so much easier to make connections, keep learning, and gain confidence.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.hackernewsletter.com&quot;&gt;Hacker Newsletter&lt;/a&gt; - A random amalgamation of
what&amp;#39;s going on in tech culture, some of it educational, some not so much.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.meetup.com&quot;&gt;Meetup.com&lt;/a&gt; - Seriously, go to meetups. If someone as shy as
me can go to meetups, you can go to meetups. Contrary to popular belief among
beginners, the vast majority of meetups are beginner-friendly, even
beginner-dominated, &lt;em&gt;especially&lt;/em&gt; hack nights and classes. Just go, and keep
going. It will make a difference in the long run.&lt;/p&gt;

&lt;p&gt;So those are my top recommendations for teaching yourself how to code, but
there are a million more resources out there, and I&amp;#39;m pretty sure I have
bookmarks for a significant percentage of them (it&amp;#39;s a bit of a problem). I hope
this can help someone, and feel free to contact me to get some more of those bookmarks.&lt;/p&gt;

&lt;p&gt;And check out the follow-up:
&lt;a href=&quot;/2015/05/28/even-more-beginner-and-intermediate-coding-resources&quot;&gt;Even More Beginner (And Intermediate) Coding Resources&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>So You Need to Make a Static Website with Repetition and Logic</title>
   <link href="http://blog.hayleyanderson.us/2015/04/22/so-you-need-to-make-a-static-website-with-repetition-and-logic/"/>
   <updated>2015-04-22T00:00:00-04:00</updated>
   <id>http://blog.hayleyanderson.us/2015/04/22/so-you-need-to-make-a-static-website-with-repetition-and-logic</id>
   <content type="html">&lt;h1&gt;Or When and How to Use Middleman&lt;/h1&gt;

&lt;p&gt;Maybe you&amp;#39;ve made static websites, maybe you&amp;#39;ve made Rails applications, but what
happens if you need to make something that&amp;#39;s in between? It&amp;#39;s not a dynamic
application, but it will require repetitive code, use logic, or
change frequently enough to make changing the code by hand a pain.
&lt;strong&gt;The solution? Possibly
&lt;a href=&quot;https://middlemanapp.com&quot;&gt;Middleman&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Middleman is a Ruby-based static
site generator that&amp;#39;s reminiscent of Rails and keeps its opinions mostly to
itself. Static site generators can handle logic and cut repetition, but they
build into static pages that are much faster and easier to host than
applications.&lt;/p&gt;

&lt;p&gt;There are many other well-known options,
such as Octopress and Jekyll (which this blog is on), but most are intended primarily for
developer blogs. It&amp;#39;s certainly possible to use most such generators for more,
but their main purpose tends to be overly clear.&lt;/p&gt;

&lt;p&gt;Middleman is more of a blank slate, at least to a Rails developer. It feels
like using a lightweight version of Rails, complete with access
to many of the basic helper methods available in Rails. It comes with built-in support
for ERb, Haml, Sass, SCSS, and CoffeeScript.&lt;/p&gt;

&lt;p&gt;Most importantly, Middleman makes it easy to add data and helpers. Data files allow you to
add data or content using YAML or JSON. This data can then be accessed from the
views and/or config file. Meanwhile, helper methods in the
config file or in separate modules can perform logic in Ruby that can be used in
the views.&lt;/p&gt;

&lt;h2&gt;Use Data, Variables, and Proxies&lt;/h2&gt;

&lt;p&gt;With Middleman, you can generate repetitive pages based on
&lt;a href=&quot;https://middlemanapp.com/advanced/data_files/&quot;&gt;JSON data&lt;/a&gt; by adding a
proxy to the &lt;code&gt;config.rb&lt;/code&gt; file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Creates person_page for each person&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;company&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;people&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;proxy&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/person_page.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;locals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;photo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;photo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;bio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bio&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then in &lt;code&gt;person_page.html.erb&lt;/code&gt;, you can take advantage of the locals provided by
the proxy:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erb&quot; data-lang=&quot;erb&quot;&gt;&lt;span class=&quot;x&quot;&gt;&amp;lt;div id=&amp;quot;person-info&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &amp;lt;h1&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image_tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;images/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;photo&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;  &amp;lt;h2&amp;gt;Bio&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html_safe&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;No matter how many people you have or edits you make, you only need to change
&lt;code&gt;person_page.html.erb&lt;/code&gt; or the corresponding JSON, but when you create the build,
a file will be generated for each person, named using their id, with their name,
photo, and bio filled in.&lt;/p&gt;

&lt;h2&gt;Perform Logic in Helpers&lt;/h2&gt;

&lt;p&gt;Adding links to each page to allow someone to continuously flip through a set of
people pages requires a bit of logic, which is where being able to add helpers
to the config file is incredibly important.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;helpers&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Links back button to previous person&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;previous_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;company&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;people&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;current_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Links next button to next person&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;next_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;company&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;people&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;
      &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;current_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;But Beware&lt;/h2&gt;

&lt;p&gt;Middleman is not
automatically set up for relative linking, and if you&amp;#39;re not prepared for that,
you&amp;#39;ll be in for a rude surprise when you make your build and find yourself without
styling, images, or linking between pages.&lt;/p&gt;

&lt;p&gt;To allow relative links pointing to
assets - stylesheets, javascripts, images, etc. -
add &lt;code&gt;activate :relative_assets&lt;/code&gt; to the build configuration in the
config file. To enable relative linking elsewhere, add &lt;code&gt;set :relative_links,
true&lt;/code&gt; to the config file (outside the build configuration). Also, you&amp;#39;ll
need to use &lt;code&gt;link_to&lt;/code&gt; helpers instead of just &lt;code&gt;a href&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Although it seems a bit odd to have &lt;code&gt;link_to&lt;/code&gt; but not relative linking,
Middleman is pretty generous with the helper methods. Make sure to
check out the &lt;a href=&quot;https://middlemanapp.com/basics/helper_methods/&quot;&gt;full list&lt;/a&gt;
because you may be surprised by what&amp;#39;s available.&lt;/p&gt;

&lt;p&gt;And if you need something more, Middleman seems like the type of framework where
the sky is the limit. At least as long as you&amp;#39;re still just looking for a static site
generator.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Sometimes It's Not Your Fault</title>
   <link href="http://blog.hayleyanderson.us/2015/04/06/sometimes-its-not-your-fault/"/>
   <updated>2015-04-06T00:00:00-04:00</updated>
   <id>http://blog.hayleyanderson.us/2015/04/06/sometimes-its-not-your-fault</id>
   <content type="html">&lt;p&gt;My blog has been pretty dead for a while, as I&amp;#39;ve been busy with starting a new
job, moving, learning how to be an adult, etc. But that&amp;#39;s not the reason I first
stopped posting on the blog - it was because I was questioning everything I was
saying. My &lt;a href=&quot;/2014/12/24/using-the-socrata-open-data-api-and-gem-to-make-complex-queries&quot;&gt;pet project&lt;/a&gt;
was falling apart with problems I couldn&amp;#39;t
explain, and I thought I&amp;#39;d messed it up terribly.&lt;/p&gt;

&lt;p&gt;One of the first things you learn when starting to code is that it&amp;#39;s
your fault when things go wrong. If there&amp;#39;s an error, it&amp;#39;s because you did
something wrong, not because the computer randomly decided to screw with you.
But then there&amp;#39;s no fanfare to tell you later on that even programming languages
and operating systems were made by humans.
They&amp;#39;re buggy or badly planned or don&amp;#39;t act the way they should, and when things
go wrong, it&amp;#39;s not necessarily just because you&amp;#39;re a clueless beginner who
messed things up.&lt;/p&gt;

&lt;p&gt;I spent all of January and half of February trying to figure out why &lt;a href=&quot;http://safernyc.com&quot;&gt;SaferNYC&lt;/a&gt;&amp;#39;s
memory usage was so out of control that its Heroku dyno kept crashing.
The memory levels and garbage collection were wildly erratic and out of control.
With the amount of data and GeoJSON the application deals with, it&amp;#39;s not
surprising that the memory would be somewhat high, but it was 3 or 4 times the
memory of a typical Rails app. One dyno should have been plenty, and it&amp;#39;s all
that&amp;#39;s affordable for a side project, but SaferNYC was running above the 512MB
limit even with no traffic.&lt;/p&gt;

&lt;p&gt;I couldn&amp;#39;t figure out how I&amp;#39;d created such a massive memory leak without
noticing. And worse, I couldn&amp;#39;t even find it after the fact. I eliminated every extra
variable instantiation I could find, got rid of gems, tried to test where the
memory was going - not to any objects I was making, as far as the tests seemed
to say. I researched and researched, asked more experienced
engineers, and all I got was that it must be a memory leak that I&amp;#39;d created.&lt;/p&gt;

&lt;p&gt;After weeks of research, begging for help, and making a hacky fix with the
garbage collector, I
ran across a message board saying that some Ruby versions didn&amp;#39;t garbage collect
properly. I read it and updated my Ruby version, but I didn&amp;#39;t believe that could
actually be the problem, and went right back to searching for the leak. It
wasn&amp;#39;t until later that I decided caching would solve all my
memory and performance problems, and replaced my garbage collector hack with a
caching call.&lt;/p&gt;

&lt;p&gt;After deploying (before I&amp;#39;d set up staging), I was horrified to discover that not a
single item had been cached (the datasets were too large). And yet, when I
rushed to check, I discovered that the garbage
collection and memory levels remained steady despite the deletion of the call to
the garbage collector. I checked my commits - no, I hadn&amp;#39;t made any other
back end changes.&lt;/p&gt;

&lt;p&gt;It was the Ruby version. A month of trying to figure out what I&amp;#39;d done
so terribly wrong, and I&amp;#39;d done nothing wrong at all (at least not to cause this).
Ruby version 2.1.2 had a problem with garbage collection in some cases, and
upgrading to 2.1.3 solved the memory problem completely. As much as languages and
frameworks seem so advanced and untouchable, they&amp;#39;re all created by humans.
Sometimes, it really isn&amp;#39;t your fault.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Parsing JSON and Passing Data Into a Table</title>
   <link href="http://blog.hayleyanderson.us/2014/12/30/parsing-json-and-passing-data-into-a-table/"/>
   <updated>2014-12-30T00:00:00-05:00</updated>
   <id>http://blog.hayleyanderson.us/2014/12/30/parsing-json-and-passing-data-into-a-table</id>
   <content type="html">&lt;p&gt;Last week I talked about &lt;a href=&quot;/2014/12/24/using-the-socrata-open-data-api-and-gem-to-make-complex-queries&quot;&gt;querying data from an open data API&lt;/a&gt; for use in my project, &lt;a href=&quot;http://safernyc.com&quot;&gt;SaferNYC&lt;/a&gt;. In this post, I&amp;#39;ll talk about the results of those queries and how to deal with that data.&lt;/p&gt;

&lt;p&gt;The Socrata Open Data API, like many APIs, returns data in the form of JSON. For all better purposes, it&amp;#39;s an array of hashes, with each hash, in this case, corresponding to a collision. Each key in the hash is a column, such as &amp;quot;date&amp;quot; or &amp;quot;latitude.&amp;quot; As an example, click &lt;a href=&quot;https://data.cityofnewyork.us/resource/h9gi-nx95.json?$select=borough,%20contributing_factor_vehicle_1,%20date,%20latitude,%20longitude,%20number_of_pedestrians_killed,%20off_street_name,%20on_street_name,%20vehicle_type_code1,%20zip_code&amp;amp;$where=number_of_pedestrians_killed%3E0%20AND%20date%3E&amp;#x27;2014-10-31T00:00:00&amp;#x27;%20AND%20date%3C&amp;#x27;2014-12-01T00:00:00&amp;#x27;&quot;&gt;here&lt;/a&gt; to run a query for information on pedestrians killed in November.&lt;/p&gt;

&lt;p&gt;The incidents/hashes in the array can be accessed using &lt;code&gt;.map&lt;/code&gt;, and the value of each column can be accessed using Ruby hash syntax. Because the API only gives 1000 results (less than a month of collisions) per query, I realized early on that I needed to save the data to a database.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NypdCollisionData&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@data_collector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DataCollector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_incidents&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;collisions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@data_collector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collisions&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;collisions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raw_incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;Incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;IncidentParser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raw_incident&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In this class, &lt;code&gt;collisions&lt;/code&gt; is the JSON (&lt;code&gt;DataCollector&lt;/code&gt; was the focus of my last post), and &lt;code&gt;Incident.create&lt;/code&gt; is being passed a hash containing the parameters for a new row in the table. The parse method simply does some minor cleaning of the data to prepare it to enter the table.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Bear with me on the awkward line breaks&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IncidentParser&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raw_incident&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@raw_incident&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;raw_incident&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;borough&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@raw_incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;borough&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;cause&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@raw_incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;contributing_factor_vehicle_1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;cyclists_injured&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@raw_incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;number_of_cyclist_injured&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;cyclists_killed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@raw_incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;number_of_cyclist_killed&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@raw_incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@raw_incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;unique_key&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;latitude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@raw_incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;latitude&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;longitude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@raw_incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;longitude&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;cross_street_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@raw_incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;off_street_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;on_street_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@raw_incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;on_street_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;pedestrians_injured&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@raw_incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;number_of_pedestrians_injured&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;pedestrians_killed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@raw_incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;number_of_pedestrians_killed&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;vehicle_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@raw_incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;vehicle_type_code1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;zip_code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@raw_incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zip_code&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;More serious work is not needed here because essential columns with null values are weeded out in the query (see my &lt;a href=&quot;/2014/12/24/using-the-socrata-open-data-api-and-gem-to-make-complex-queries&quot;&gt;last post&lt;/a&gt;), and &lt;code&gt;.to_i&lt;/code&gt; and &lt;code&gt;.to_f&lt;/code&gt; eliminate null values in other important columns (by changing them to 0 or 0.0, which are appropriate values in this case). Incidents like the ones seen in your test query that have no location data will not even make it this far, so time will not be wasted attempting to parse those incidents.&lt;/p&gt;

&lt;p&gt;There&amp;#39;s one more step before the data in the table is viable. Many (usually about two thirds) of the incidents that have sufficient location data are still lacking latitude and longitude, and those values are now 0.0 in the database. Fortunately, this problem is very easily solved using the &lt;a href=&quot;http://www.rubygeocoder.com&quot;&gt;Geocoder gem&lt;/a&gt;. Just a few lines of code, and the (hopefully) correct latitude and longitude will be entered into the database.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Incident&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;geocoded_by&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:cross_streets&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;after_validation&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:geocode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;incident&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;cross_streets&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;on_street_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; and &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cross_street_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;borough&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, NY &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zip_code&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Additional methods shown below&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And finally, we&amp;#39;ll want to be able to easily query for incidents that occurred within a certain number of months and didn&amp;#39;t somehow fail geocoding and end up staying in the Gulf of Guinea.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;good_data_in_time_range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number_of_months&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;between_dates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number_of_months&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;latitude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;between_dates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number_of_months&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;most_recent_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strptime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;start_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;most_recent_date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prev_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number_of_months&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;start_date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;%FT%T&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.most_recent_date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;%FT%T&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So I&amp;#39;ve taken JSON returned from a query to the SODA API, parsed it, entered it into a database, and geocoded it, and can run a query to get back relevant, useful data points from my database. Next time, I&amp;#39;ll go over creating functional GeoJSON from these data points.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using the Socrata Open Data API and Gem to Make Complex Queries</title>
   <link href="http://blog.hayleyanderson.us/2014/12/24/using-the-socrata-open-data-api-and-gem-to-make-complex-queries/"/>
   <updated>2014-12-24T00:00:00-05:00</updated>
   <id>http://blog.hayleyanderson.us/2014/12/24/using-the-socrata-open-data-api-and-gem-to-make-complex-queries</id>
   <content type="html">&lt;p&gt;Over the past few weeks, I&amp;#39;ve been working on my capstone project for Metis. My project, SaferNYC, explores data from &lt;a href=&quot;https://nycopendata.socrata.com/NYC-BigApps/NYPD-Motor-Vehicle-Collisions/h9gi-nx95?&quot;&gt;NYC Open Data&lt;/a&gt;, visualizing New York City car collisions involving cyclists and pedestrians. You can view my project at &lt;a href=&quot;http://safernyc.com&quot;&gt;safernyc.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The first step of my project was of course pulling in data from the dataset on NYC Open Data. NYC Open Data is maintained by Socrata, so the API connected with the site is the &lt;a href=&quot;http://dev.socrata.com/consumers/getting-started.html&quot;&gt;Socrata Open Data API&lt;/a&gt;, or SODA. At its most basic, SODA can be queried through a url including parameters writing in SoQL, Socrata&amp;#39;s version of SQL.&lt;/p&gt;

&lt;p&gt;My query, however, quickly grew out of control for this approach. I only wanted data that was recent, had location information, and involved a cyclist or pedestrian death or injury. This created a url hundreds of characters long, and it just kept growing.&lt;/p&gt;

&lt;p&gt;As my query got increasingly unmanageable, I discovered that there is also a gem for the API, &lt;a href=&quot;https://github.com/socrata/soda-ruby&quot;&gt;soda-ruby&lt;/a&gt;. While the gem was very helpful for cleaing up some aspects of my query, the gem does not address the unwieldy SoQL parameters.&lt;/p&gt;

&lt;p&gt;The soda-ruby docs contain only one simplistic example and little explanation. It&amp;#39;s initially unclear how the gem is supposed to work, but the reality is that a complex query requires injecting strings of pure SoQL - almost exactly what would be used in the url approach.&lt;/p&gt;

&lt;p&gt;The main benefit of using the gem is in the setup. Using the gem, environmental variables can be easily included in the Ruby code. Also, clauses such as &lt;code&gt;$select&lt;/code&gt; (the data points requested), &lt;code&gt;$where&lt;/code&gt; (requirements the data should meet), and &lt;code&gt;$order&lt;/code&gt; (how the data will be sorted and returned) can be emphasized as keys pointing to the corresponding SoQL parameters rather than getting lost in a string.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;soda/client&amp;quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DataCollector&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SODA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;soda_domain&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;app_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;soda_application_token&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;collisions&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;soda_dataset_identifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&amp;quot;$select&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;incident_data_points&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&amp;quot;$where&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;incident_conditions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&amp;quot;$order&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;date ASC&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Methods creating strings of SoQL - see below&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It&amp;#39;s a bit downhill from here. I used a slightly-better-looking array of symbols rather than a string to create the &lt;code&gt;$select&lt;/code&gt; call, but as you may notice above, the array is simply joined with commas, creating a string of SoQL, before being passed in as a parameter. The symbols correspond to columns in the dataset from NYC Open Data (thus using their naming) and ask that the data returned includes each of these columns for each data point.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;incident_data_points&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:borough&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:contributing_factor_vehicle_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:latitude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:longitude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:number_of_cyclist_injured&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:number_of_cyclist_killed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:number_of_pedestrians_injured&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:number_of_pedestrians_killed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:off_street_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:on_street_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:unique_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:vehicle_type_code1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:zip_code&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tricks like the array of symbols above don&amp;#39;t really work for the rest of the parameters because they&amp;#39;re more complex. Using strings of SoQL instead gets very ugly very fast, so I broke mine up into numerous small methods. While this is better than one very long string, the methods are quite difficult to follow.&lt;/p&gt;

&lt;p&gt;The methods below (which make up the rest of the class show above) contain SoQL giving the following paramaters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Data is from dates later than the last incident saved in the database (or, if the database is empty, is from six months ago)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Data has either latitude and longitude or cross streets and zip code&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Data includes a cyclist or pedestrian fatality or injury.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;incident_conditions&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_new&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; AND &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;has_location_data&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; AND &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_relevant&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;is_new&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;date&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_of_last_saved_incident&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;#39;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;has_location_data&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;(&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;has_latitude_and_longitude&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; OR &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;has_address_information&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;)&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;is_relevant&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;(&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pedestrian_involved&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; OR &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cyclist_involved&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;)&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;date_of_last_saved_incident&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists?&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;Incident&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;current_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strptime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;current_date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prev_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;%FT%T&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;has_latitude_and_longitude&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;(latitude IS NOT NULL AND longitude IS NOT NULL)&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;has_address_information&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;(&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;has_cross_streets&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; AND zip_code IS NOT NULL)&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pedestrian_involved&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;number_of_pedestrians_injured&amp;gt;0 OR number_of_pedestrians_killed&amp;gt;0&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;cyclist_involved&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;number_of_cyclist_injured&amp;gt;0 OR number_of_cyclist_killed&amp;gt;0&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;has_cross_streets&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;(on_street_name IS NOT NULL AND off_street_name IS NOT NULL)&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is all necessary because some points in the dataset are missing essential information, such as location, rendering them useless to me. More importantly, there is such a huge volume of data (and an API limit of 1000 data points per call - no more than a month of relevant data), that I can&amp;#39;t waste time or space pulling in information that is old, irrelevant, or useless.&lt;/p&gt;

&lt;p&gt;These parameters were as annoying to write as they look, but they&amp;#39;re relatively straightforward, and I end up with data that includes the information I need but no more. Socrata&amp;#39;s &lt;a href=&quot;http://dev.socrata.com/docs/queries.html&quot;&gt;documentation&lt;/a&gt; on SoQL is much better than their documentation on soda-ruby, and it made the content of this query quite simple to write.&lt;/p&gt;

&lt;p&gt;Next, I&amp;#39;ll cover the data this query returns and how I clean and store it.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Formception</title>
   <link href="http://blog.hayleyanderson.us/2014/11/27/formception/"/>
   <updated>2014-11-27T00:00:00-05:00</updated>
   <id>http://blog.hayleyanderson.us/2014/11/27/formception</id>
   <content type="html">&lt;p&gt;Or how to make forms within forms to make forms within forms. The key here is the magic (yes, actual magic) of &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When we recently had the opportunity to choose a group project to work on, I insisted on the &lt;a href=&quot;http://formr-orlatter.herokuapp.com&quot;&gt;Survey Monkey clone&lt;/a&gt; because I thought it would present some interesting challenges. Did I actually have any idea of how to handle those challenges? No, not really, but it was quite a fun journey.&lt;/p&gt;

&lt;p&gt;We decided pretty quickly to have separate tables and models for surveys, questions, and answers, but have only a one-page form for creating a survey complete with questions and answers. This then posed the problem of how to best create the questions and answers with a form for a survey.&lt;/p&gt;

&lt;p&gt;As it turns out, &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; is a great way to solve this problem. It must be added to each model that will be creating objects of another model within it - in this case, survey accepts nested attributes for questions and answers, and question accepts nested attributes for answers.&lt;/p&gt;

&lt;p&gt;Then the magic happens. Create the correct number of new empty questions and answers in the surveys controller, create a form for survey (just survey!), add a &lt;code&gt;fields_for :questions&lt;/code&gt;, and looped under that, a &lt;code&gt;fields_for :answers&lt;/code&gt;. The numbers of questions and answers created will be rendered by the mini-forms &lt;code&gt;fields_for&lt;/code&gt; and then given ids. Since question belongs to survey, the questions table will receive the survey id, and since answer belongs to question, the answers table will receive the question id.&lt;/p&gt;

&lt;p&gt;It gets better. Add &lt;code&gt;allow_destroy: true&lt;/code&gt;, and you can delete questions and answers directly within the survey form by including an option for &lt;code&gt;:_destroy&lt;/code&gt; in each &lt;code&gt;fields_for&lt;/code&gt;. Add &lt;code&gt;reject_if: :all_blank&lt;/code&gt;, and the object will not be created if the field is not filled out. Questions, since they may have empty answers within them, need only a slightly more detailed lambda stating to reject if the main question field is blank.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Check out this crazy model magic&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Survey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;validates&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;presence&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;belongs_to&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:user&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;default_scope&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;has_many&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:questions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;dependent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:destroy&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;has_many&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:answers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;through&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:questions&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;accepts_nested_attributes_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:questions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;allow_destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;reject_if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blank?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;accepts_nested_attributes_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:answers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;allow_destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;reject_if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:all_blank&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now the models and form are set, but there&amp;#39;s still a bit more work to be done. The survey params now contain &lt;em&gt;everything&lt;/em&gt;: &lt;code&gt;:name, questions_attributes: [:content, :_destroy, answers_attributes: [:choice, :_destroy]]&lt;/code&gt;. And since the form creates ids for questions and answers, it will continue creating new ids each time you try to edit unless you specifically pull in the ids for questions and answers through the params in the surveys controller.&lt;/p&gt;

&lt;p&gt;And that&amp;#39;s the first half of your formception. Here, Rails has it all set up for you.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Changeability and Design</title>
   <link href="http://blog.hayleyanderson.us/2014/11/09/changeability-and-design/"/>
   <updated>2014-11-09T00:00:00-05:00</updated>
   <id>http://blog.hayleyanderson.us/2014/11/09/changeability-and-design</id>
   <content type="html">&lt;p&gt;I always come up with ideas for posts, but then I never feel like actually writing the posts. So now I have to combine several of the topics I was intending to write about, including git and polymorphism. They do, after all, have the same themes in common. In short, they can provide, and are best used with, carefully planned design and an ability to smoothly make changes as time goes on.&lt;/p&gt;

&lt;p&gt;Git can be a rough thing to learn (see &lt;a href=&quot;http://blog.hayleyanderson.us/2014/10/03/github-and-the-magical-black-hole-of-version-control/&quot;&gt;my post&lt;/a&gt;), but now I&amp;#39;m really starting to see the beauty in it. You can make concise, sensible commits, and then later remove the ones that introduced problems without losing other work. You can make branches to designate different features, types of work, or contributors, then loop them back together and later see how you got to where you are now. But it all rests on designing your workflow and planning for the future.&lt;/p&gt;

&lt;p&gt;Code is the same. Design, plan, break it up into smaller parts, leave it flexible for future changes. One of the coolest examples of this is polymorphism. Partly just because of its awesome name. But also because it&amp;#39;s a really awesome tool. Polymorphism can prevent both repetition and conditionals, and it&amp;#39;s an important technique that can be used in designing code to be flexible.&lt;/p&gt;

&lt;p&gt;Polymorphism can be used in different ways, but in general, it allows pieces of code to run differently depending on the situation. Rather than hard-coding a method to take a particular variable, you can pass it an argument that may change - because your code is changing frequently, the variable may be different depending on the situation, or you&amp;#39;d like it to accept multiple different pieces of information. Polymorphism, by definition, makes your code changeable - in exactly the way you need it to be.&lt;/p&gt;

&lt;p&gt;The best part about this learning experience is starting to see things come together and being able to spot and appreciate the benefits of good design and planning. Programming is starting to seem more like an art, and I finally start to get why people complain about certain types of bad programming and all the git tutorials spend more time than anything warning that you&amp;#39;re going to anger other developers. Maybe I can&amp;#39;t program well, but at least I know what they&amp;#39;re talking about. Appreciating changeability and design - it&amp;#39;s a start.&lt;/p&gt;

&lt;p&gt;For more on polymorphism (via thoughtbot):&lt;br&gt;
* &lt;a href=&quot;http://robots.thoughtbot.com/back-to-basics-polymorphism-and-ruby&quot;&gt;Back to Basics: Polymorphism and Ruby&lt;/a&gt;&lt;br&gt;
* &lt;a href=&quot;http://robots.thoughtbot.com/refactoring-replace-conditional-with-polymorphism&quot;&gt;Refactoring: Replace Conditional with Polymorphism&lt;/a&gt;&lt;br&gt;
* &lt;a href=&quot;http://robots.thoughtbot.com/using-polymorphism-to-make-a-better-activity-feed-in-rails&quot;&gt;Using Polymorphism to Make a Better Activity Feed in Rails&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Strings and Arrays and Linked Lists, Oh My!</title>
   <link href="http://blog.hayleyanderson.us/2014/10/25/strings-and-arrays-and-linked-lists-oh-my/"/>
   <updated>2014-10-25T00:00:00-04:00</updated>
   <id>http://blog.hayleyanderson.us/2014/10/25/strings-and-arrays-and-linked-lists-oh-my</id>
   <content type="html">&lt;p&gt;I&amp;#39;ve spent some time the past couple weeks learning about data structures and algorithms. I started out &lt;a href=&quot;http://code.tutsplus.com/tutorials/algorithms-and-data-structures--cms-20437&quot;&gt;here&lt;/a&gt;, reading about some of the basics of data structures. I&amp;#39;ve since been reading &lt;a href=&quot;http://interactivepython.org/runestone/static/pythonds/index.html&quot;&gt;Problem Solving with Algorithms and Data Structures&lt;/a&gt; on Interactive Python, and everything is starting to make more sense.&lt;/p&gt;

&lt;p&gt;Strings, arrays, and linked lists are a few types of data structures - objects used to store information. They&amp;#39;re used in algorithms, which are sort of like the underlying processes behind programs. Programs are created to make certain things happen, but algorithms are more general. They focus more on the details of how data is stored and manipulated. As a result, one of the main concerns with algorithms is their effectiveness in terms of speed and memory use.&lt;/p&gt;

&lt;p&gt;Speed of an algorithm is represented by Big-O (order of magnitude) notation. Big-O notation is shown as O(function of n), with n being the size of the problem - for example, if 5 items are being iterated over in the algorithm, n is 5. Since algorithms are not meant for particular situations, n is sometimes treated like the limit to infinity. This means that f(n) is often simplified so that most algorithms give just a few functions for Big-O notation.&lt;/p&gt;

&lt;p&gt;Some of the common functions are constant, O(1), logarithmic, O(log(n)), linear, O(n), log-linear, O(nlog(n)), and quadratic, O(n&lt;sup&gt;2&lt;/sup&gt;). If you look at these functions on a &lt;a href=&quot;http://interactivepython.org/runestone/static/pythonds/AlgorithmAnalysis/BigONotation.html&quot;&gt;graph&lt;/a&gt;, you can see that they&amp;#39;re in order of increasing slope. Algorithms with functions of lower slope, such as log(n), are typically preferred over algorithms with functions of higher slope, such as n&lt;sup&gt;2&lt;/sup&gt;, because they are less likely to take an unacceptable amount of time if the dataset grows very large.&lt;/p&gt;

&lt;p&gt;A constant algorithm takes the same amount of time regardless of the size of the problem - maybe the algorithm simply replaces the first item in an array without regard to the other items in the list. A linear algorithm may have a single loop that loops through a list of n items once, so as n increases, the time required linearly increases.&lt;/p&gt;

&lt;p&gt;A logarithmic algorithm may also have a loop, but the loop may break or be limited so that the amount of time required does not increase as quickly as the number of items increases. On the other hand, a quadratic algorithm could have a loop looping through each item &lt;em&gt;within&lt;/em&gt; the first loop. In this situation, the time required obviously increases very quickly as n grows very large, and it suggests that another algorithm may be preferable.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m still learning how to actually write algorithms, but last night I was able to watch a practice technical interview through &lt;a href=&quot;https://www.facebook.com/groups/LadiesStormHackathons/&quot;&gt;Ladies Storm Hackathons&lt;/a&gt;, which helped a lot in elucidating the mysterious coding interview. With some more practice, I hope to catch up with some of the computer science knowledge I&amp;#39;ve missed in time to do well in coding interviews.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Running on Rails</title>
   <link href="http://blog.hayleyanderson.us/2014/10/19/running-on-rails/"/>
   <updated>2014-10-19T00:00:00-04:00</updated>
   <id>http://blog.hayleyanderson.us/2014/10/19/running-on-rails</id>
   <content type="html">&lt;p&gt;I&amp;#39;m going to start aiming for shorter, more frequent posts. The last couple
weeks have been pretty overwhelming, as we started learning Rails. There is
basically just so much information, I don&amp;#39;t know where to start. Regardless,
Rails is great. I didn&amp;#39;t expect to like it so much. But this weekend I&amp;#39;ve been
at a hackathon where I was asked to work on a Bootstrap and a Wordpress site,
and I desperately missed the organization and structure of Rails.&lt;/p&gt;

&lt;p&gt;Rails is an MVC, or model-view-controller framework. This means that it&amp;#39;s
structured with separate sections for models, views, and controllers, and these pieces work together to determine how the application runs.&lt;/p&gt;

&lt;p&gt;Models get information from the database and determine how the database tables relate to each other. This means, for example, that if your application has users and groups, the models can relate the users table and the groups table so that users can join groups.&lt;/p&gt;

&lt;p&gt;Views are more like the actual pages of the application. There might be views
for an index page, a user page, a group page, pages with lists of all the users or groups, pages for making new users or groups, etc.&lt;/p&gt;

&lt;p&gt;Controllers connect the models and views, and fetch the information from the
model that will be required for the view. It might say that for the user view,
you need to get information about the user (from the model) before showing the
user page.&lt;/p&gt;

&lt;p&gt;In the end, when a user navigates through your application, each request they send, by clicking on a link, submitting a form, etc., will go to the routes. The routes determine which pages and actions your application will have. The routes will send the request to the corresponding section of the controller, which fetches the information it needs from the model, which connects with the database and sends back information accordingly. The controller then sends the information to the corresponding view, which renders the correct page and allow the user to continue navigating through the website and
sending requests.&lt;/p&gt;

&lt;p&gt;So that&amp;#39;s the basics of Rails. It&amp;#39;s a very cool framework, and I&amp;#39;m excited to
start working on bigger and more complex Rails applications, and writing about
some of the more interesting things that Ruby and/or Rails can do.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Github and the Magical Black Hole of Version Control</title>
   <link href="http://blog.hayleyanderson.us/2014/10/03/github-and-the-magical-black-hole-of-version-control/"/>
   <updated>2014-10-03T00:00:00-04:00</updated>
   <id>http://blog.hayleyanderson.us/2014/10/03/github-and-the-magical-black-hole-of-version-control</id>
   <content type="html">&lt;p&gt;In celebration of my first-ever (successful!) pull request, I&amp;#39;m dedicating this post to the use of git and Github. The concept of git and Github was a huge source of frustration to me early in the summer, when I painfully managed to get my website onto Github without any understanding of what I was doing. I&amp;#39;m still learning how to understand and use these tools effectively and appropriately, and I&amp;#39;m sure I will be for a very long time.&lt;/p&gt;

&lt;p&gt;Git isn&amp;#39;t something you can really see, certainly not in the way you can see the results of HTML or Ruby that you wrote, and a beginner uses git and Github differently from someone working on a team. And unlike with other concepts, there aren&amp;#39;t many resources out there that explain the basics or how to improve on your own. &lt;a href=&quot;https://try.github.io/levels/1/challenges/1&quot;&gt;This tutorial&lt;/a&gt; is great for learning the commands, but I when I started, I didn&amp;#39;t understand what I was accomplishing with these commands or why.&lt;/p&gt;

&lt;p&gt;First you need to understand that git is a method of version control and tracks your changes, while Github is a website that makes git much easier to use and understand. Git runs Github, not the other way around. I think of git as a magical black hole that permanently absorbs information from files and can communicate between your computer and Github, but only if you tell it to and are responsible about doing so.&lt;/p&gt;

&lt;p&gt;You can connect files on your computer to Github by creating a folder, or &lt;a href=&quot;http://files.fosswire.com/2007/08/fwunixref.pdf&quot;&gt;directory&lt;/a&gt;, adding in the files that you want to put on Github, and sprinkling magical git &amp;#39;init&amp;#39; dust on the folder to transform it into a repository. This doesn&amp;#39;t really change the folder; it just tells git to watch the folder. You then create a repository on Github, and tell git as directed that you want to connect the repository on your computer and the respository on Github.&lt;/p&gt;

&lt;p&gt;Once your folder is a git repository, git can see the files in it, but it can&amp;#39;t do anything with them. You need to &amp;#39;add&amp;#39; those files. Now they&amp;#39;re &amp;#39;staged&amp;#39; but git still isn&amp;#39;t doing anything with them; it just has the potential. If you want git to actually save those files or the new changes in them, you need to &amp;#39;commit&amp;#39; them. The files on your computer will be unchanged, but now copies of those files, any past versions of those files that you committed, and the &amp;#39;commit&amp;#39; messages you added will permanently reside in the magical black hole of git. It&amp;#39;s only at this point that you can tell Github about these files, and if you&amp;#39;re ready, &amp;#39;push&amp;#39; them into the &amp;#39;master&amp;#39; branch of the repository on Github.&lt;/p&gt;

&lt;p&gt;If you change your documents and want the changes to appear on Github you need to &amp;#39;add&amp;#39;, &amp;#39;commit&amp;#39;, and &amp;#39;push&amp;#39;, or just &amp;#39;add&amp;#39; and &amp;#39;commit&amp;#39; if you want git to save and track your changes but you don&amp;#39;t want them to appear online yet. You might notice that you can edit files in Github and think that this will be easier, but it won&amp;#39;t be. This will likely result in conflicts, or differences between versions, which are frustrating and confusing and are not supposed to happen while you&amp;#39;re working alone. Later when you&amp;#39;re a contributing directly to a repository with other developers, you will have to carefully &amp;#39;pull&amp;#39; their changes as they add them, thereby updating what you have locally on your computer, while making and pushing your own changes. This is when conflicts typically occur.&lt;/p&gt;

&lt;p&gt;Git doesn&amp;#39;t like conflicts because its purpose is to orchestrate different people working on the same project and to encourage organized, planned changes. To git, even if you&amp;#39;re working alone, the repository on your computer and the repository on Github are still separate places. It expects that you are working only on the files on your computer and that you, like your files, are unaware of what is happening on Github until you ask git and it tells you.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re interested in someone else&amp;#39;s project, you can &amp;#39;fork&amp;#39; or &amp;#39;clone&amp;#39; it, downloading it to your own Github account or computer, where you can play with it as you wish. If eventually you do this to an open source project and you commit useful changes to your forked or cloned version, you can submit a &amp;#39;pull request&amp;#39; to ask those in charge of the original project to &amp;#39;pull&amp;#39; your changes into their own main version of the project, and actually use them.&lt;/p&gt;

&lt;p&gt;If you want to make a series of changes you&amp;#39;re unsure about or take your work on differing paths, you can create a new branch. Branches separate different series of changes. In practice, if you have a currently functioning project but want to change it, you will probably create and commit your new changes to a &amp;#39;development&amp;#39; branch, where the changes are completely separate from the main &amp;#39;master&amp;#39; branch that your functioning project most likely lives in. The changes in &amp;#39;development&amp;#39; will leave your master branch untouched until you &amp;#39;merge&amp;#39; the branches, adding the new changes from the new branch into the original branch.&lt;/p&gt;

&lt;p&gt;Git does far, far more than I can even begin to talk about, but I wanted to address some basic misunderstandings that I&amp;#39;ve struggled with and have seen others struggling with. There is lots of &lt;a href=&quot;https://www.atlassian.com/git/tutorials/setting-up-a-repository&quot;&gt;information&lt;/a&gt; out there, but almost all of it assumes some prior level of understanding (and that you&amp;#39;re working on a large project with others), even when explaining the basics.&lt;/p&gt;

&lt;p&gt;This has been another overly long post, but if you&amp;#39;re interested in the difficulties of beginner programmers (whether you&amp;#39;ve been one yourself or not), &lt;a href=&quot;http://christinacacioppo.com/blog/learning-online&quot;&gt;this piece&lt;/a&gt; is an incredibly interesting, non-git-related blog post that I recently read and highly recommend.&lt;/p&gt;

&lt;p&gt;P.S. Save completely separate backups before attempting anything in git that you aren&amp;#39;t confident about.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Introduction to Object-Oriented Programming</title>
   <link href="http://blog.hayleyanderson.us/2014/09/26/introduction-to-object-oriented-programming/"/>
   <updated>2014-09-26T00:00:00-04:00</updated>
   <id>http://blog.hayleyanderson.us/2014/09/26/introduction-to-object-oriented-programming</id>
   <content type="html">&lt;p&gt;Although the first week of the Metis Ruby on Rails course has been much less intense than I&amp;#39;d expected, the first week has been a somewhat jolting dive into object-oriented programming. Before the class started, the bits of Ruby I&amp;#39;d done were just lines of code. I thought classes were for CSS, methods were just words that did cool things to variables, and objects were for special uses of Python or Java.&lt;/p&gt;

&lt;p&gt;Arrays, hashes, strings, numbers, variables, and performing basic functions on them are the easy bits. I&amp;#39;ve had a lot more difficulty wrapping my head around objects and what to do with them.&lt;/p&gt;

&lt;p&gt;We jumped into using objects on Day One, when we created a simple guessing game. The computer picks a random number between one and ten, and you try to guess what it is (until you get it wrong three times). Then we added the ability to play multiple rounds, and to end the game by telling you how many times you won, as well as the depressingly-close-to-three average number of guesses per round.&lt;/p&gt;

&lt;p&gt;This game uses at least a Game class and a Round class, and muliple methods, or chunks of useful code, within each of them. There&amp;#39;s only one game, or one game object, each time you run the program, but there are multiple rounds, or multiple instances of the round object. Or more, multiple round objects. The Game class must introduce the game, run the rounds, count the total scores, and announce the scores at the end. This means that the class should contain at least a welcome method, a loop that creates and starts each round, a scoring method, and an ending method.&lt;/p&gt;

&lt;p&gt;The Round class, meanwhile, must choose a random number, ask for guesses, tally guesses to be calculated in the average, evaluate guesses, and respond. It gets to have a method for each step, and a loop that runs the guess/tally/evaluation/response pieces three times, unless the loop is broken by a correct guess. (Which then starts a new round, unless the game has already looped through the Round class five times.)&lt;/p&gt;

&lt;p&gt;After my initial dismay about cutting a program into pieces, the part I struggled with was understanding how the rounds worked as objects, and more specifically, getting the two classes to communicate on the guess count. Having the game count and total the wins on its own was simple, but the game kept counting only one guess for each round (definitely not accurate). In the end, the solution was adding a method to the Round class that simply pointed to the variable collecting the guess tally, and then, in the loop within the Game class, calling said method on each instance of the Round class.&lt;/p&gt;

&lt;p&gt;On the first day, the idea of having an object (a class) that&amp;#39;s also multiple objects (each instance), was incredibly confusing. A few days later, it makes a whole lot more sense, though I still have to fight my inclination to keep the numbers of classes and methods as small as I can get away with. It&amp;#39;s only been a week though, and I&amp;#39;ve come a pretty long way. My little &lt;a href=&quot;https://github.com/HayleyCAnderson/WeekOne/blob/master/music.rb&quot;&gt;music database solution&lt;/a&gt; has six whole methods, accurate names, and appropriate spacing that I did entirely without help or pointed suggestions!&lt;/p&gt;

&lt;p&gt;I&amp;#39;m excited to have started looking at data, and I can&amp;#39;t wait for next week, when we start working with SQL, HTTP, gems, and Sinatra. I think having a less limited view of the use of code will help, and I&amp;#39;m eager to start moving towards work that has more real-life applications. Check back next week, and I&amp;#39;ll try to improve my blog game as well as my distaste for classes.&lt;/p&gt;
</content>
 </entry>
 

</feed>
